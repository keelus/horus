.option {
	width:100%;
	display:flex;
	flex-direction: column;
	margin-bottom:10px;

	.content {
		padding:10px 30px;

		.colors {
			display:grid;
			grid-template-columns: repeat(auto-fill, 75px);
			grid-gap: 15px;

			.color {
				width:75px;
				height:75px;
				border-radius:6px;
				position:relative;
				transition: all .1s linear;

				& > .background {
					width:100%;
					height:100%;
					border-radius:6px;
					outline: 2px solid rgba(0, 0, 0, 0);
					outline-offset: 2px;
					transition: all .1s linear;
				}

				&:not(.noInteraction){
					&.selected > .background {
						outline-color:$accent;
					}
	
					&:not(.new):not(.selected) > .background:hover {
						outline-color:rgba($accent, .5);
						cursor:pointer;
					}
				}

				& > .delete {
					width:20px;
					height:20px;
					border-radius: 100%;
					color:$error;
					background:$bg-1;
					position: absolute;
					top:-10px;
					right:-10px;
					display: flex;
					justify-content: center;
					align-items: center;
					transition: all .1s linear;
					border: 1px solid rgba($textPrimary, .3);

					& > svg {
						width: 14px;
						fill:$textPrimary;
					}
					&:hover {
						cursor:pointer;
						background:$error;
						svg {
							fill:white !important;
						}
					}
				}


				&.new {
					border:2px dashed $accent;
					color:$accent;
					opacity: .7;
					box-sizing: border-box;
					display: flex;
					justify-content: center;
					align-items: center;
					font-size: 2em;
					line-height: 2em;

					&:hover {
						cursor:pointer;
						opacity:1;
					}
				}
			}
		}

		.gradients {
			display:grid;
			grid-template-columns: repeat(auto-fill, 125px);
			grid-gap: 15px;

			.gradient {
				width:125px;
				height:75px;
				border-radius:6px;
				position:relative;
				transition: all .1s linear;

				& > .background {
					width:100%;
					height:100%;
					border-radius:6px;
					outline: 2px solid rgba(0, 0, 0, 0);
					outline-offset: 2px;
					transition: all .1s linear;
				}

				&:not(.noInteraction){
					&.selected > .background {
						outline-color:$accent;
					}
	
					&:not(.new):not(.selected) > .background:hover {
						outline-color:rgba($accent, .5);
						cursor:pointer;
					}
				}

				& > .delete {
					width:20px;
					height:20px;
					border-radius: 100%;
					color:$error;
					background:$bg-1;
					position: absolute;
					top:-10px;
					right:-10px;
					display: flex;
					justify-content: center;
					align-items: center;
					transition: all .1s linear;
					border: 1px solid rgba($textPrimary, .3);

					& > svg {
						width: 14px;
						fill:$textPrimary;
					}
					&:hover {
						cursor:pointer;
						background:$error;
						svg {
							fill:white !important;
						}
					}
				}

				& > .edit {
					width:20px;
					height:20px;
					border-radius: 100%;
					color:$error;
					background:$bg-1;
					position: absolute;
					top:-10px;
					right:15px;
					display: flex;
					justify-content: center;
					align-items: center;
					transition: all .1s linear;
					border: 1px solid rgba($textPrimary, .3);

					& > svg {
						width: 14px;
						fill:$textPrimary;
					}
					&:hover {
						cursor:pointer;
						background:$accent;
						svg {
							fill:white !important;
						}
					}
				}


				&.new {
					border:2px dashed $accent;
					color:$accent;
					opacity: .7;
					box-sizing: border-box;
					display: flex;
					justify-content: center;
					align-items: center;
					font-size: 2em;
					line-height: 2em;

					&:hover {
						cursor:pointer;
						opacity:1;
					}
				}
			}
		}
	}

	& > .checkLine {
		display:flex;
		align-items: center;
		.checkbox {
			margin-right:.3em;
			width:1.25em;
			height:1.25em;
			display:inline-block;
			overflow:hidden;

			.on > svg, .off > svg {
				width:1.25em;
				height:1.25em;
				fill:$accent;
			}

			.off > svg {
				fill:$textPrimary2;
			}

			.on {
				display:none;
			}
			.off {
				display:block;
			}
		}
	}

	&.active {
		& > .checkLine {
			& > .checkbox > .on {
				display:block;
			}
			& > .checkbox > .off {
				display:none;
			}

		}
		& > .checkLine > .text {
			color:$textPrimary;
			position:relative;

			&::after {
				content:"- Active";
				display:inline-block;
				padding-left:10px;
				font-weight: bold;
				color:$accent;
			}
		}
	}

	&:not(.active) {
		& > .checkLine > .text {
			color:$textPrimary2;
		}
		& > .checkLine, & > .checkLine > *:hover {
			cursor:pointer;
		}
		& > .content {
			display:none;
		}
	}

	.checkLine {
		& > .text {
			color:$textPrimary;
			&:hover {
				cursor:pointer;
			}
		}

		&, & > *:hover {
			cursor:default;
		}
	}
}

.darker {
	position:fixed;
	width:100%;
	height:100%;
	top:0;
	left:0;
	background-color:rgba($bg-2, .95);
	z-index:998;
	display:none;

	&.show {
		display:block;
	}
}

.modal {
	position:fixed;
	width:500px;
	background-color:$bg-1;
	box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
	z-index:999;
	display: flex;
	flex-direction: column;

	border-radius:10px;

	top:50%;
	left:50%;
	transform:translate(-50%, -50%);

	padding:20px;
	box-sizing: border-box;

	.title {
		color:$textPrimary;
		font-size:1.25em;
		font-weight: bold;
	}
	.subtitle {
		color:$textPrimary2;
		font-weight: lighter;
		margin-bottom:5px;
	}

	.doubleButton {
		margin-top:15px;
		display:flex;
		justify-content: center;
		gap:15px;
	}
	
	.gradientNote {
		font-size:.9em;
		color:$accent;
		&:hover {
			cursor:pointer;
			text-decoration: underline;
		}
	}

	.inputBox {
		width:100%;
		display:flex;
		padding:2px 20px;

		& > .text {
			display:flex;
			align-items: center;
			justify-content: flex-start;
			min-width:150px;
			color: $textPrimary;
		}

		& > *:nth-child(2) {
			flex:1;
			display:flex;
			align-items: center;
			justify-content: flex-start;

			& > input {
				width:80%;
			}
		}

		.note {
			padding-left:10px;
			font-size:.75rem;
		}
	}
}

.inputBox {
	width:100%;
	display:flex;
	padding:2px 0;

	& > .text {
		display:flex;
		align-items: center;
		justify-content: flex-start;
		min-width:150px;
		color: $textPrimary;
	}

	& > *:nth-child(2) {
		flex:1;
		display:flex;
		align-items: center;
		justify-content: flex-start;

		& > input {
			width:80%;
		}
	}

	.note {
		padding-left:10px;
		font-size:.75rem;
	}
}
input[type="range"]:hover {
	cursor:pointer;
}

#newGradientModal > .modal {
	.gradientPreview {
		border:2px solid $accent;
		width:100%;
		height:50px;
	}
	color:$textPrimary;
	
	.hexCodes {
		margin-top:0;
		width:auto;
		list-style-type: none;
		padding: 0;
		li.hexCode {
			margin-bottom:5px;
			display:flex;
			align-items: center;
			gap:6px;
			.drag {
				width:20px;
				height:30px;
				display:flex;
				align-items: center;
				& svg {
					width:30px;
					fill: $textPrimary2;
					transition:all .1s linear;
				}
				&:hover{
					cursor:move;
					& svg {
						fill: $textPrimary;
					}

				}
			}

			.remove {
				padding:3px 2px;
				background:$bg-4;
				border-radius:5px;
				transition:all .1s linear;
				height:auto;

				& svg {
					transition:all .1s linear;
					width: 20px;
					height: 20px;
					fill: $textPrimary;
				}

				&:hover {
					cursor:pointer;
					background:$error;
					svg {
						fill:white;
					}
				}
			}
			position:relative;

		}
		li.addColorToGradient {
			color:$accent;

			&:hover {
				cursor:pointer;
				text-decoration: underline;
			}
		}
	}
}

#brightnessVisual {
	color:$textPrimary;
}